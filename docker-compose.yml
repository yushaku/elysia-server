services:
  app:
    container_name: server
    image: "oven/bun"
    # override default entrypoint allows us to do `bun install` before serving
    entrypoint: []
    # execute bun install before we start the dev server in watch mode
    command: "/bin/sh -c 'bun install && bun run --watch src/index.ts'"
    # expose the right ports
    ports: ["3000:3000"]
    # setup a host mounted volume to sync changes to the container
    volumes: ["./:/home/bun/app"]

  redis:
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - ${REDIS_PORT:-6379}:6379
    networks:
      - common

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=redis
    ports:
      - ${REDIS_COMMAND_PORT:-8081}:8081
    networks:
      - common

  postgres:
    image: postgres:16.2
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB_MAIN: ${DB_MAIN}
      POSTGRES_DB_TEST: ${DB_TEST}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - ./.docker/postgres/data:/var/lib/postgresql/data
      - ./config/init-db.sh:/docker-entrypoint-initdb.d/init.sql
    networks:
      - common

networks:
  common:
    driver: bridge
    name: common
